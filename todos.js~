Tasks = new Mongo.Collection("tasks");

if (Meteor.isClient) {
    //This code only runs on the client
    Template.body.helpers({
	    tasks: function() {
		if (Session.get("hideCompleted")) {
		    //If hide completed is checked, filter tasks
		    return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});
		} else {
		    //Otherwise, return all of the tasks
		    return Tasks.find({}, {sort: {createdAt: -1}});
		}
	    },
		hideCompleted: function () {
		return Session.get("hideCompleted")
		    }  
	});
    
    //Create a new task
    Template.body.events({
	    "submit .new-task": function (event) {
		//Function aboved is called when the new task form is submitted
		var text = event.target.text.value;
		
		Meteor.call(addTask, text);
		
		//Clear form
		event.target.text.value = "";
		
		//Prevent default form submit
		return false;
	    },
		//Function to hide completed tasks
		"change .hide-completed input": function (event) {
		    Session.set("hideCompleted", event.target.checked);
		}
	});
    
    
    Template.task.events({
	    "click .toggle-checked": function () {
		// Set the checked property to the opposite of its current value
		Meteor.call("setChecked", this._id, ! this.checked);
	    },
		// Delete task
		"click .delete": function () {
		    Meteor.call("deleteTask", this._id);
		}
	});   
    
    Accounts.ui.config({
	    passwordSignupFields: "USERNAME_ONLY"
		});		
    
    //Methods
    Meteor.methods({
	    addTask: function (text) {
		//Making sure the user is logged in before inserting task
		if (!Meteor.userId) {
		    throw new Meteor.error("not-authorized");
		}
		//If there is no error, insert to database 
		Tasks.insert({
			text: text,
			    createdAt: new Date(),
			    owner: Meteor.userId(),
			    username: Meteor.user().username
			    });
	    },
		//Delete task
		deleteTask: function (taskId) {
		Tasks.remove(taskId);
	    },
		//Update task
		setChecked: function (taskId, setChecked) {
		Tasks.update(taskId, {$set: { checked: setChecked }});
	    }
	});
}

